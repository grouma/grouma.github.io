<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Gary Roumanis</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2014-10-31T01:32:49-07:00</updated>
 <id></id>
 <author>
   <name>Gary Roumanis</name>
   <email></email>
 </author>

 
 <entry>
   <title>//Oneweek Hackathon</title>
   <link href="/2014/10/29/oneweek-hackathon/"/>
   <updated>2014-10-29T00:00:00-07:00</updated>
   <id>/2014/10/29/oneweek-hackathon</id>
   <content type="html">&lt;p&gt;A couple months ago I competed in //Oneweek, the first-ever Microsoft company wide Hackathon. The week was kicked off by a company forum where leadership set priorities for the year, followed by two-days of pizza and coffee filled hacking. The fun ended in a two day Product Fair where all hacks were shared and voted upon. I was fortunate enough to work on the Eye Gaze Wheelchair hack which not only won the Tech for Good award, but also won the overall Hackathon.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/public/images/oneweek-award.jpg&quot; alt=&quot;Oneweek Award&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;h3&gt;The Hack&lt;/h3&gt;

&lt;p&gt;Creating a hack team was facilitated with the use of an internal website. Users could pose hack ideas or browse and join existing teams. I was actually quite impressed with the website and it definitely promoted cross core collaboration. In fact, the team I worked with had all the cores of Microsoft represented. When I read the idea of the Eye Gaze Wheelchair hack I immediately knew I had to help out. The idea, although ambitious, was quite simple, enable a user to drive a wheel chair with only the use of their eyes. If successful, I knew it would be extremely rewarding, as well as a great opportunity to learn more about hardware.&lt;/p&gt;

&lt;p&gt;The hack consisted of four parts, Tobii eye gaze tracking for Windows, an eye gaze &amp;quot;Joystick&amp;quot; application, Kinect-based &amp;quot;Safe Drive&amp;quot; for obstacle avoidance, and a microcontroller interface to a power wheelchair. The Tobii device was connected to a Surface Pro 3 running the eye gaze joystick application while the Microsoft Robotics Runtime was running on a second Surface Pro 2 connected to the Wheelchair and a Kinect camera. Below I will briefly discuss the implementation of the hack.&lt;/p&gt;

&lt;h3&gt;Tobii Eye Gaze for Windows&lt;/h3&gt;

&lt;p&gt;Eye gaze information was provided to the eye gaze applications using an existing “Eye Tracker Host” application from MSR. This application interfaced with the Tobii hardware and then published the gaze position using a windows socket. This completely abstracted the job of eye-tracking away from the application. More information on the Tobii hardware can be found on their &lt;a href=&quot;http://www.tobii.com&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Eye Gaze &amp;quot;Joystick&amp;quot; Application&lt;/h3&gt;

&lt;p&gt;The joystick application was created during the hackathon and displayed a live view from the forward-facing Kinect camera on the remote wheelchair and allowed the user to direct it to turn in place left or right, move forward, or stop by gazing at locations on the screen.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/public/images/joystick-application.jpg&quot; alt=&quot;&amp;quot;Joystick&amp;quot; Application&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The location of the user’s gaze was displayed as a red dot on the screen. The application “smoothed” the output from the eye-gaze tracker using a simple averaging filter to produce a more stable point of gaze.&lt;/p&gt;

&lt;p&gt;To prevent un-intended wheelchair motion, each region also had a “heat-up” time wherein the area would be gradually de-dimmed until the gaze had persisted there for some small amount of time. The system was “off” or “stopped” until the user gazed at the Start region for several seconds. Then the system became active and would publish drive commands to be used by the robotics “Safe Drive” system to move the chair. &lt;/p&gt;

&lt;p&gt;To stop, the user would direct their gaze away from the surface entirely, or at the “stop” region. When the “stop” region was activated after several seconds of persistent gaze, the system became inactive until the “start” region was activated again. The Joystick application communicated with the lower-level robotic control via a WCF protocol and connection created during the hackathon.&lt;/p&gt;

&lt;h3&gt;Kinect-based &amp;quot;Safe Drive&amp;quot; for Obstacle Avoidance&lt;/h3&gt;

&lt;p&gt;The Microsoft Robotics team’s existing Kinect-based Autonomous Navigation solution includes dynamic obstacle detection and avoidance that takes “suggested” direction input and fuses it with Kinect and other sensor data to produce a “safe” trajectory. For the hack, the MSR Robotics Runtime processed the Kinect sensor data in real-time to detect the floor and identify potential obstacles and calculate an appropriate speed and heading for the wheelchair based on the eye gaze application’s input.   &lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&quot;/public/images/safe-drive.jpg&quot; alt=&quot;Safe Drive&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;During the hack, the existing “suggestion drive” component was enhanced to include a WCF interface to receive suggested trajectory information from the eye gaze wheelchair control app and to publish the camera images coming from the Kinect.&lt;/p&gt;

&lt;h3&gt;Microcontroller Interface to Wheelchair&lt;/h3&gt;

&lt;p&gt;This is the portion that I worked on so I will be able to provide a little more detail. &lt;/p&gt;

&lt;p&gt;Once a safe trajectory is calculated it needs to be communicated to the chair. A lengthy web search on the model of the wheelchair revealed that the control interface used a proprietary CAN-bus communication. Although the manufacturer (Permobil) of the chair eventually shared the protocol, we determined that reworking this interface was infeasible in time for the hack. Instead we opted to replace the mechanical joystick with an Arduino. (I want to personally thank Permobil for their amazing contribution with this project and their continued support)&lt;/p&gt;

&lt;p&gt;Internally, the joystick contains an 8-pin ribbon cable that connects to the chair controller board. Thankfully, &lt;a href=&quot;http://forum.arduino.cc/index.php/topic,158256.0.html&quot;&gt;someone&lt;/a&gt; had already done the hard work and determined the voltages across the wires for each of the positions of the joystick. Essentially, when the joystick is moved completely in a single direction, i.e. forward, backward, left or right, a pair of pins will either go low (1.1V) or high (3.8V) while the remaining pins stayed at 2.5V. If the joystick was moved partially in a single direction, then the voltage across a pair of pins will be in between the above values. Moving the direction of the joystick in multiple directions at once e.g. towards 10 o&amp;#39;clock, resulted in voltages across multiple pairs of pins fluctuating in correspondence to the joystick&amp;#39;s x and y component.&lt;/p&gt;

&lt;p&gt;After discovering this information I immediately replaced the joystick and connected the ribbon to the Arduino&amp;#39;s PWM ports. It is important to note that the wheelchair expects all pins to be at 2.5V upon bootup. Unfortunately, I kept receiving mysterious joystick connection errors when turning on the wheelchair. After a lot of head scratching, and busting out a variable power supply, it was determined that the wheelchair control board did not like the PWM signals and instead required a steady voltage. To circumvent this issues, each PWM signal was processed through a simple solid-state &lt;a href=&quot;http://en.wikipedia.org/wiki/Low-pass_filter&quot;&gt;low-pass filter&lt;/a&gt; to produce the necessary steady-state voltages. The first time I actually got the device working can be seen &lt;a href=&quot;http://instagram.com/p/rEdv4Gkzdb&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I abstracted the Arduino through a simple C# library which exposed an interface to send a movement vector. The library contained a basic handshake protocol to connect the Surface device to the Arduino over a serial port. The library would then translate a movement vector into corresponding voltages and send them to the Arduino through a custom communication protocol.&lt;/p&gt;

&lt;p&gt;One interesting thing to note, is a problem which occurred during testing.  The voltage output from the PWM ports varied depending on if the Arduino was connected directly to the surface or through a USB hub. This caused issues when turning the wheelchair on since the resting level across the 8-pin ribbons strayed too far from 2.5V. To remedy this issue, the C# library had a configurable &amp;quot;middle&amp;quot; voltage value.&lt;/p&gt;

&lt;h3&gt;Result&lt;/h3&gt;

&lt;p&gt;Quite miraculously, the first person to ever use the completed device was former football star Steve Gleason. He has been living with amyotrophic lateral sclerosis (ALS) which I&amp;#39;m sure you are all too familiar with thanks to the Ice Bucket Challenge. Steve was the initial inspiration for the project. He traveled from New Orleans, where he lives, to the Microsoft campus specifically to work with our hack team. I have never been more satisfied and proud then standing over Steve&amp;#39;s shoulder and watching the wheelchair spring to life with the movement of his gaze. Check it out in action below.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/uAtErSwfmAc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Homemade Sous-Vide Cooker</title>
   <link href="/2014/07/05/sous-vide/"/>
   <updated>2014-07-05T00:00:00-07:00</updated>
   <id>/2014/07/05/sous-vide</id>
   <content type="html">&lt;p&gt;I stumbled across the &lt;a href=&quot;http://en.wikipedia.org/wiki/Sous-vide&quot;&gt;sous-vide&lt;/a&gt; method while browsing &lt;a href=&quot;http://www.reddit.com/r/cooking&quot;&gt;/r/cooking&lt;/a&gt;. I was immediately intrigued by the novel concept but did not want to shell out a large sum of money for an unproven device. Thankfully, I had a spare Arduino and was looking for another side project to hack on.&lt;/p&gt;

&lt;p&gt;The idea of making a sous-vide cooker with an Arduino is not a new. In fact there are a number of fantastic tutorials that can easily be found with a quick search. With that in mind, I will simply discuss some of my unique decisions in the process of making the device.&lt;/p&gt;

&lt;h3&gt;Relay&lt;/h3&gt;

&lt;p&gt;I chose to go with a pre-made relay because I&amp;#39;ll be the first to admit that I do not know much about electronics. I decided it is best to try and limit the chance of shock while I&amp;#39;m still learning. Unfortunately, the most popular AC power switch, PowerSwitch Tail II, was on backorder from all major retailers and took several weeks to ship. The demand is understandable though as it makes controlling household items dead simple.&lt;/p&gt;

&lt;h3&gt;Input&lt;/h3&gt;

&lt;p&gt;I did not want to upload new code each time I wanted to make use of the device. Thus hardcoding the desired temperature was out of the question. Instead I added a simple potentiometer which was used to select a cooking temperature from 0 - 99 degrees Celsius.&lt;/p&gt;

&lt;h3&gt;Temperature Gauge&lt;/h3&gt;

&lt;p&gt;Initially I wanted to make a completely custom made temperature gauge using a thermistor and &lt;a href=&quot;http://en.wikipedia.org/wiki/Steinhart%E2%80%93Hart_equation&quot;&gt;Steinhart-Hart&amp;#39;s equation&lt;/a&gt;. Getting accurate readings with this method was very easy but making the gauge waterproof proved futile with my terrible handiwork. Out of frustration I opted to go with a pre-made digital temperature sensor. Setting up the gauge was very simple.&lt;/p&gt;

&lt;h3&gt;Slow Cooker&lt;/h3&gt;

&lt;p&gt;I wanted a barebones slow-cooker for both price and ease of use. I found a 3 quart slow cooker for only $20 on Amazon. The benefit of such a small cooker is that you don&amp;#39;t have to worry about fluctuations of temperature within the sous-vide water bath. Most professional sous-vide cookers prevent this issue by integrating a small water jet.&lt;/p&gt;

&lt;h3&gt;Completed Device&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/sous-vide-1.jpg&quot; alt=&quot;completed sous-vide cooker 1&quot;&gt;
&lt;img src=&quot;/public/images/sous-vide-2.jpg&quot; alt=&quot;completed sous-vide cooker 2&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Materials&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Arduino Uno&lt;/li&gt;
&lt;li&gt;Various hookup wires&lt;/li&gt;
&lt;li&gt;LCD Display&lt;/li&gt;
&lt;li&gt;Potentiometer x 2&lt;/li&gt;
&lt;li&gt;9v Battery&lt;/li&gt;
&lt;li&gt;Breadboard x 2&lt;/li&gt;
&lt;li&gt;Project Box&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Crock-Pot-SCR300SS-3-Quart-Manual-Stainless/dp/B003UCG8II/ref=sr_1_3?ie=UTF8&amp;qid=1404616855&amp;sr=8-3&amp;keywords=crockpot&quot;&gt;Simple Crock-Pot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.adafruit.com/products/381&quot;&gt;DS18B20 Digital Temperature Sensor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sparkfun.com/products/10747&quot;&gt;PowerSwitch Tail II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Ziploc-Vacuum-Starter-3-Quart-1-Pump/dp/B003UEMFUG/ref=sr_1_1?ie=UTF8&amp;qid=1404617144&amp;sr=8-1&amp;keywords=Ziploc+Vacuum+Starter+Kit&quot;&gt;Ziploc Vacuum Starter Kit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Code&lt;/h3&gt;

&lt;p&gt;The code is very straightforward. I&amp;#39;m leveraging this &lt;a href=&quot;https://github.com/JChristensen/Timer&quot;&gt;Timer&lt;/a&gt; library along with this &lt;a href=&quot;https://www.pjrc.com/teensy/td_libs_OneWire.html&quot;&gt;OneWire&lt;/a&gt; library for controlling the digital temperature gauge. One interesting fact is that I read the temperature every 10 seconds. This is because the act of polling for the temperature is quite computationally expensive. Unfortunately, I&amp;#39;m not sure exactly why as I did not dig into the library. Regardless, I did not like the noticeable input lag when I was using the potentiometer to set the desired cooking temperature.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Timer.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;LiquidCrystal.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;OneWire.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;DallasTemperature.h&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Define the input pin for the potentiometer that will set desired temperature&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define INPUT_PIN 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Define One Wire data pin&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define ONE_WIRE_BUS 13&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Define Pin used to control Powerswitch&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define POWERSWITCH_PIN A0&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;// Setup a One Wire instance to communicate with DS18B20&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;OneWire&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;oneWire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ONE_WIRE_BUS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DallasTemperature&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sensors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oneWire&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Initialize the library with the numbers of the interface pins&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LiquidCrystal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousDesiredTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Set up the LCD&amp;#39;s number of columns and rows: &lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Current temp: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Desired temp: &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Set powerswitch pin to output&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POWERSWITCH_PIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Set up DS18B20&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sensors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 
  &lt;span class=&quot;n&quot;&gt;getCurrentTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Read termperature every 10 seconds&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// This reduces input lag when setting desired temperature&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;every&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getCurrentTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCurrentTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sensors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestTemperatures&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Only one sensor is attached&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;currentTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getTempCByIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Only update screen when necessary to avoid flashing&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;previousTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Clear current number&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Read desired temperature and convert to value between 0 - 99&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;analogRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INPUT_PIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1024.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Again only update screen when necessary to avoid flashing&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desiredTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;previousDesiredTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;previousDesiredTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;desiredTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Clear current number&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setCursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desiredTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desiredTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Turn crock pot on&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POWERSWITCH_PIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Turn crock pot off&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POWERSWITCH_PIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</content>
 </entry>
 

</feed>
